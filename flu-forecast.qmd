---
title: "STAT 626 Time Series - Group 1 Project - Forecasting the Flu"
author: "Group 1 / Alex Hughes"
format: gfm
---

## Libraries and plot theme

```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(astsa)
library(lubridate)
theme_set(theme_bw())
```

## Flu data

```{r message=FALSE, warning=FALSE}
flu <- read_csv("VIW_FNT.csv")
head(flu)
```

## Aggregate across countries to create flu count by date time series datasets for Influenza A, B, and all strains

```{r 'aggregate datasets'}
InfA <- flu %>% 
  group_by(ISO_WEEKSTARTDATE) %>%
  summarise(total_flu = sum(INF_A, na.rm = T))

InfB <- flu %>%
  group_by(ISO_WEEKSTARTDATE) %>%
  summarise(total_flu = sum(INF_B, na.rm = T))

InfA$subtype <- "Inf_A"
InfB$subtype <- "Inf_B"

flu_df <- bind_rows(InfA, InfB)

InfAll <- flu %>% # contains more than just A and B; many strains
  group_by(ISO_WEEKSTARTDATE) %>%
  summarise(total_flu = sum(INF_ALL, na.rm = T))
```

## Plot Influenza A over time

```{r 'infA over time'}
# ggplot(flu, aes(x = ISO_WEEKSTARTDATE, y = INF_A))+
#   geom_line()

ggplot(InfA, aes(x = ISO_WEEKSTARTDATE, y = total_flu))+
  geom_line()+
  labs(x = "Time (in weeks)", y = "Influenza A number of specimens")

ggsave('InfA-by-year.png')
```

## Plot Influenza A vs Influenza B over time

```{r 'infA and infB over time'}
ggplot(flu_df, aes(x = ISO_WEEKSTARTDATE, y = total_flu, color = subtype))+
  geom_line()+
  labs(x = "Time (in weeks)", y = "Number of specimens")

ggsave('InfA-vs-InfB-time-series.png')
```

```{r}
tsplot(flu$INF_A)
```

# Merge flu and drought

Drought data was downloaded from https://droughtmonitor.unl.edu/DmData/DataDownload/DSCI.aspx

Set 1/1/2001 to 12/31/2010

```{r}
dr <- read_csv("dm_export_20010101_20101231.csv")

drought_clean <- dr %>%
  mutate(MapDate = ymd(MapDate)) %>%
  mutate(MMWR_WEEK = epiweek(MapDate), # create mmwr week and year variables for matching w/ flu dataset
         MMWR_YEAR = epiyear(MapDate))

USAflu <- flu %>%
  filter(COUNTRY_CODE == "USA") %>%
  filter(MMWR_WEEKSTARTDATE > as.Date("2000-12-31") & MMWR_WEEKSTARTDATE <= as.Date("2010-12-31")) %>%
  dplyr::select(MMWR_WEEK, MMWR_YEAR, INF_A, INF_B, INF_ALL)

df <- left_join(USAflu, drought_clean, by = c("MMWR_WEEK", "MMWR_YEAR")) %>%
  arrange(MapDate)

# want complete cases only

df <- df[complete.cases(df[ , c("MMWR_WEEK", "MMWR_YEAR", "INF_A", "INF_B", "INF_ALL", "DSCI")]), ] 

write_csv(df, 'complete-flu-drought-2001-2010.csv')
```

# Merge flu and google flu trends

```{r}
trends <- readxl::read_excel("Flue 2004-2014 weekly.xls")

trends_merge_ready <- trends %>%
  mutate(MMWR_WEEK = epiweek(Week), # create mmwr week and year variables for matching
         MMWR_YEAR = epiyear(Week)) %>%
  rename(flu_searches = `flu: (United States)`) 

flu_drought_searches <- left_join(df, trends_merge_ready, by = c("MMWR_WEEK", "MMWR_YEAR")) %>% # this dataset has the 2001 to 2010 date range even though searches data doesn't start until 2004
  dplyr::select(!Week)

write_csv(flu_drought_searches, 'flu-and-drought-and-googletrends.csv')

# also create a version that only spans dates present in all 3 datasets:

flu_drought_searches %>%
  filter(!is.na(flu_searches)) %>%
  write_csv('flu-and-drought-and-googletrends-2004-2010.csv')
```


# Consider possible models

auto.arima function uses stepwise selection to find the best possible model 

```{r}
y1 <- flu_drought_searches$INF_A

flulog <- log(y1+1)

difftslog <- diff(flulog)
tsplot(difftslog)

# for(i in 2:52){ # we've diffed once, go 51 more times to complete the year
#   difftslog <- diff(difftslog)
# }
# diffed52times <- difftslog
# tsplot(diffed52times)

library(forecast)

aamod <- auto.arima(flulog, ic = "bic") # suggests arima(1,1,2) (diff is 1 because flulog hasn't been diffed yet)
aamod
plot(forecast(aamod))

aamod_diff1 <- auto.arima(diff(flulog), ic = "bic") # suggests arima(1,0,2) (diff now 0 because already diffed)
aamod_diff1
plot(forecast(aamod_diff1))

aamod_diff1

```

### Residuals and Ljung-Box-Pierce Q test

The Q test gives p = .06542, so at the alpha = 0.05 level we fail to reject the null hypothesis that the model residuals are independently distributed.

```{r}
Box.test(aamod_diff1$residuals, lag = log(length(aamod_diff1$residuals)))

plot(aamod_diff1$residuals) # still looks like there are some "outlier" residuals (abs values > 2)
```


## Try SARIMA? (Ignore)

Maybe weekly (s = 52)?

```{r}
acf(diff(diff(flulog), 52), lag.max = 104)
acf(diff(diff(flulog), 52), lag.max = 104)
```

The function arima() is from the stats package (stats::arima) whereas the function sarima is from the astsa package. I think they do the same thing but the arguments are ordered differently.

```{r}
mod <- stats::arima(x = flulog, 
             order = c(1, 1, 2), # p, d, q
             seasonal = list(order = c(0, 1, 2), period = 52)) 
summary(mod)
mod
```

## Flu search / drought data
